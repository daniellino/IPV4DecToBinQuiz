{"version":3,"sources":["main.js"],"names":["result","resetWholeGeneration","binar","final","i","decimVal","Math","round","random","push","clickedObjectContainer","concat","binaryVlaue","innerHTML","length","pow","console","log","myChosenAnswers","getElementById","makeItHidden","style","display","tablRowCount","document","querySelector","rows","Indx","givenAns","myArray","j","randNum","shuffleArray","floor","temp","newArray","runToCheck","resultAns","body","backgroundColor","color","innerText","undefined","myFunctionFalse","cmbAnsFieldContent","myFunctionCorrect","q","indexStr"],"mappings":"aAMA,IALA,IAAAA,OAAMC,qBAAuB,WAAvBA,OAAAA,SAAAA,UAIFC,MAAQ,GADRF,OAAJ,GACIE,SAAJ,EACIC,EAAQ,EAAZC,EAAA,EAAAA,IACIC,OAAQC,KAAZC,MAAAD,KAAAE,OAAA,EAAA,IAGIN,MAAMO,KAAKT,QADXA,OAASM,OAAKC,OAAMD,QAGpBH,IAyBAO,uBAzBAP,YAAcQ,SAAOX,eAArB,gBAKJY,YAAYC,UAAYV,OAAxBS,IAAAA,IAAAA,GAAYC,EAAAA,GAAAA,MAAYV,OACxBC,KAEoB,GAAZF,MAAME,IADTC,UAAqBS,KAA1BC,IAAmC,EAAI,EAAAX,IACnCC,UAIO,EAIVW,QAAAC,IAAAZ,UAEDW,QAAQC,IAAId,QAOZ,IAAIO,gBAAAA,GACAQ,SAAAA,SAAJC,eAA0B,WAI1B,SAASC,eAELV,uBAAuBW,MAAMC,QAAU,OAAvCZ,SAAAA,mBACF,IAAAa,EAAAC,SAAAC,cAAA,iBAAAC,KAAAZ,OAIEE,QAAQC,IAAIM,GACZ,IAAK,IAAII,EAAO,EAAGA,EAAOJ,EAAe,EAAGI,IAIjB,QANvBJ,SAAeC,cACPD,8BAAZI,EAAA,uBAKUN,MAAMC,SAMJ,QAVHK,SAAUA,cAEH,8BACJA,EAAA,uBAMIN,MAACI,UAATD,SAASC,cAIf,8BAAAE,EAAA,KAFQN,MAAMC,QAAU,QAM1B,SAAIJ,kBACkBR,IAAlBQ,kBACHA,gBAAAR,uBAAAe,cAAA,OAAAZ,WACDe,SAASf,UAAYK,gBAOzB,IAHA,IAAMW,QAAU,CAACxB,UAGRyB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAA5B,IAAKC,QAAYzB,KAAMwB,MAAK,IAAAxB,KAAAE,UACxBQ,QAAIe,IAAUzB,SACdU,QAAQC,KAAIc,SAIhB,SAASC,aAAaH,GAAtB,IAASG,IAAAA,EAAAA,EAAaH,OAAS,EAAA,EAAAzB,EAAAA,IAAA,CACtB,IAAK0B,EAAGD,KAAAA,MAAQf,KAASN,UAAWJ,EAAI,IACjCE,EAAK2B,EAAU7B,GACnB8B,EAAOL,GAAAA,EAAXC,GACAD,EAAAC,GAAaD,EAEhB,OAAAA,EACD,IAAAM,SAAON,aAAPA,SAaJ,SAASO,aAAT,IAAAC,EAAAb,SAAsBL,eAAA,cAMdK,SAASc,IACTV,EAAAf,UAAuB,SACzBW,SAAAc,KAAAjB,MAAAkB,gBAAA,UACFF,EAAAhB,MAAAmB,MAAA,UAOQZ,SAASf,UADU,IAAnBK,gBACA,sBAAAP,OAA2CN,SAA3C,qCALJ,sBAAAM,OAAAN,SAAA,gBAAAM,OAAAO,gBAAA,KAGAmB,IAAAA,EAAwBT,SAAxBa,UAS0BC,MAA1BhC,wBAPIkB,GAAAvB,UAdRgC,EAAAxB,UAAA,WACIwB,SAASC,KAAGd,MAASL,gBAAe,UAIpCS,SAASP,MAAMmB,MAAQ,WAyBvBG,IAPA,IAAA,IAAIC,EAAAA,EAAAA,EAAAA,SAAkB9B,OAAIT,IAAU,CAChCwC,IAAAA,SAAAA,OAAiBC,EAAA,GAEjBH,SAAAA,YAAeI,SALvBvB,SAQOL,eAAA4B,UAAAlC,UAAAsB,SAAAW","file":"main.min.js","sourcesContent":["\r\nconst resetWholeGeneration = () => {\r\n    window.location.reload();\r\n}\r\nlet result;\r\nlet binar = [];\r\nlet final = \"\";\r\nlet decimVal = 0;\r\nfor (let i = 0; i < 8; i++) {\r\n    result = Math.round(Math.random(1, 2));\r\n    binar.push(result);\r\n    // console.log(binar);\r\n    final = final.concat(result);\r\n\r\n}\r\nlet binaryVlaue = document.getElementById(\"binary-Value\");\r\n\r\nbinaryVlaue.innerHTML = final;\r\n//convert to decial value\r\nfor (let i = 0; i < binar.length; i++) {\r\n    if (binar[i] == 1) {\r\n        decimVal = decimVal + Math.pow(2, 7 - i);\r\n        // console.log(Math.pow(2, 7 - i));\r\n        // console.log(decimVal);\r\n    } else {\r\n        decimVal += 0;\r\n    }\r\n    // console.log(decimVal);\r\n}\r\nconsole.log(decimVal);\r\nconsole.log(final);\r\n\r\n/////////////////////////////////////////////////////////////************* */\r\n////////////////////////////////////////////////////////////************************* */\r\n/////////////////////////////////////////////////////////********************************************************** */\r\n\r\n/*//////////VARIABLES▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄*/\r\nlet clickedObjectContainer;\r\nlet myChosenAnswers = ''; //variable for keeping concatenated words\r\nlet givenAns = document.getElementById('combAns');\r\n//~~~~~~~~~~~~~~~~~asked question loop~~~~~~~~~~~~~~~~\r\n/*//////////FUNCTIONS/////////*/\r\nfunction makeItHidden() {\r\n    //function for hidding the clicked cell table row\r\n    clickedObjectContainer.style.display = 'none';\r\n} //hiding\r\n\r\nfunction testForHidingRow() {\r\n    let tablRowCount = document.querySelector('.answersTable').rows.length;\r\n    console.log(tablRowCount);\r\n    for (var Indx = 1; Indx < tablRowCount + 1; Indx++) {\r\n        if (\r\n            document.querySelector(\r\n                '.answersTable tr:nth-child(' + Indx + ') td:nth-child(2)>a'\r\n            ).style.display == 'none' &&\r\n            document.querySelector(\r\n                '.answersTable tr:nth-child(' + Indx + ') td:nth-child(3)>a'\r\n            ).style.display == 'none'\r\n        ) {\r\n            document.querySelector(\r\n                '.answersTable tr:nth-child(' + Indx + ')'\r\n            ).style.display = 'none';\r\n        } //end of if\r\n    } //end of loop\r\n} //end of function hiding rows\r\n\r\nfunction populatGivenAns() {\r\n    if (myChosenAnswers == '') {\r\n        myChosenAnswers = clickedObjectContainer.querySelector('div').innerHTML;\r\n    }\r\n    givenAns.innerHTML = myChosenAnswers;\r\n}\r\n\r\n/*//////////FUNCTIONS/////////*/\r\nconst myArray = [decimVal]; //*********defining array of answers\r\n\r\n//adding other false random answers to myArray\r\nfor (let j = 0; j < 5; j++) {\r\n    let randNum = Math.floor(Math.random() * 256);\r\n    console.log(randNum);\r\n    myArray.push(randNum);\r\n}\r\n\r\nfunction shuffleArray(myArray) {\r\n    for (var i = myArray.length - 1; i > 0; i--) {\r\n        var j = Math.floor(Math.random() * (i + 1));\r\n        var temp = myArray[i];\r\n        myArray[i] = myArray[j];\r\n        myArray[j] = temp;\r\n    }\r\n    return myArray;\r\n}\r\nvar newArray = shuffleArray(myArray);\r\n// console.log(newArray);\r\n//*********************checking the shuffled array for empty elements\r\n// function testForempty(newArray) {\r\n//     return newArray != null;\r\n// }\r\n\r\n// console.log(newArray);\r\n/*********************************************End of random shuffling of the options**************/\r\n/*/\\/\\/\\/\\Checking the matching with correct answer/\\/\\/\\/\\*/\r\n\r\nfunction runToCheck() {\r\n    // let hidTable = document.querySelector('.answersTable').style.display = 'none';\r\n    //~~~~~~~~~~~~~~~~function definition for correct\r\n    let resultAns = document.getElementById('matchField');\r\n    function myFunctionCorrect() {\r\n        resultAns.innerHTML = 'Correct!';\r\n        document.body.style.backgroundColor = '#96E29A'; //color feedback correct\r\n        givenAns.style.color = '#22E02D';\r\n    } //end of function myFunctionCorrect\r\n    //~~~~~~~~~~~~~~~~function definition for False\r\n    function myFunctionFalse() {\r\n        //injecting a class for changing the color of the FALSE text to red\r\n        resultAns.innerHTML = 'False!';\r\n        document.body.style.backgroundColor = '#FF5760'; //color feedback correct\r\n        resultAns.style.color = '#FF0000';\r\n        if (myChosenAnswers == '') {\r\n            givenAns.innerHTML = `Correct answer is: ${decimVal}, and you didn't choose an option`\r\n        } else {\r\n            givenAns.innerHTML = `Correct answer is: ${decimVal}, You Chose ${myChosenAnswers}!`;\r\n        }\r\n    } //end of function myFunctionFalse\r\n    //~~~~~~~~~~~~~~~~Main condition~~~~~~~~~~~~~////////////////////////////////\r\n    let cmbAnsFieldContent = givenAns.innerText;\r\n    if (clickedObjectContainer != undefined) {\r\n        //document.getElementById('askedQuestion').innerHTML = ansCombinedWithSingleQues;\r\n        if (cmbAnsFieldContent == decimVal) {\r\n            myFunctionCorrect();\r\n        } else {\r\n            myFunctionFalse();\r\n        }\r\n\r\n    } else {\r\n        myFunctionFalse();\r\n    }\r\n} //end of function runToCheck\r\n\r\n/*▐▐▐▐▐▐▐▐▐Assigning shuffled new array elements to HTML cells in the table▐▐▐▐▐▐▐▐▐▐▐*/\r\nfor (let q = 0; q < newArray.length; q++) {\r\n    var indexStr = String(q + 1);\r\n    // console.log(newArray.length);\r\n    indexStr = 'print_arr' + indexStr;\r\n    // console.log(indexStr);\r\n    document.getElementById(indexStr).innerHTML = newArray[q];\r\n\r\n}\r\n"]}